fastlane_version '1.89.0'

default_platform :ios
require 'slather'

platform :ios do
  the_scheme = 'Teach'
  the_project = 'Teach.xcodeproj'
  the_workspace = 'Teach.xcworkspace'

  def bump_build_number
    if ENV['BUILD_NUMBER']
      increment_build_number(build_number: ENV['BUILD_NUMBER'])
    end
  end

  desc 'Install development certs and checkout carthage deps'
  lane :setup_dev do
    match(type: 'development')
    carthage(no_build: true, use_binaries: false, use_ssh: true)
  end

  desc 'Build for development and run unit tests'
  lane :commit do
    setup_dev
    bump_build_number

    build_for_device
    test
    coverage
  end

  desc 'Run app tests on a simulator. Run commit lane first'
  lane :test do
    # must use destination instead of device until https://github.com/fastlane/fastlane/issues/5638
    # is resolved.
    scan(scheme: the_scheme,
         destination: 'platform=iOS Simulator,name=iPhone 6',
         workspace: the_workspace,
         skip_build: true)
  end

  desc 'Build app for device. Run commit lane first'
  lane :build_for_device do
    gym # build for device so we can Hockey
  end

  desc 'Generate code coverage report. Run commit lane first'
  lane :coverage do
    slather(proj: the_project,
            workspace: the_workspace,
            scheme: the_scheme,
            cobertura_xml: true)
  end

  error do |lane, exception|
      if lane.to_s != 'feature'

        path = ENV['HOME'] + '/vitruvius-worst.m4a'
        if File.file?(path)
          sh 'afplay ' + path
        end

        ENV['SLACK_URL'] = 'https://hooks.slack.com/services/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'
        slack(
          channel: '#ios-gerrit',
          message: "THAT IDEA IS JUST THE WORST\n\n" + exception.message,
          success: false,
          payload: {
              'GERRIT_CHANGE_URL' => ENV['GERRIT_CHANGE_URL'].to_s,
              'BUILD_URL' => ENV['BUILD_URL'].to_s,
            },
          attachment_properties: {
              thumb_url: vitruvius_image
            }
        )
      end
  end
end

def vitruvius_image
  vitruvius_imgs = ['http://i.ytimg.com/vi/_WzjkMIJ_nw/maxresdefault.jpg',
                    'http://cache.lego.com/r/www/r/movie/-/media/franchises/the%20lego%20movie/explore/downloads/touts/vit-879x360.png?l.r2=-816021521',
                    'http://static.tvtropes.org/pmwiki/pub/images/vitruvius_2234.png']
  return vitruvius_imgs.shuffle.sample
end

