// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compose renders 1`] = `
<Screen
  drawUnderNavBar={true}
  leftBarButtons={
    Array [
      Object {
        "action": [Function],
        "testID": "compose-message.cancel",
        "title": "Cancel",
      },
    ]
  }
  navBarColor="#fff"
  navBarStyle="light"
  rightBarButtons={
    Array [
      Object {
        "action": [Function],
        "disabled": true,
        "style": "done",
        "testID": "compose-message.send",
        "title": "Send",
      },
      Object {
        "accessibilityLabel": "Edit attachments (0)",
        "action": [Function],
        "badge": false,
        "image": Object {
          "testUri": "../../../src/images/attachment-large.png",
        },
        "testID": "compose-message.attach",
      },
    ]
  }
  title="New Message"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0.6)",
                "borderRadius": 12,
              },
              Object {
                "backgroundColor": "rgba(0,0,0,0.8)",
              },
              Object {
                "height": 170,
                "width": 170,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#fff",
                      "fontFamily": ".SFUIDisplay-semibold",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "color": "#fff",
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Sending...
              </Text>
            </View>
          </View>
          <ActivityIndicator
            animating={true}
            color="#fff"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "flex": 1,
                "marginTop": -40,
              }
            }
          />
        </View>
      </View>
    </Modal>
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingBottom": 16,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutoAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      onScroll={[Function]}
      scrollEventThrottle={0}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
                "paddingHorizontal": 16,
              },
            ]
          }
          testID="compose.course-select"
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 54,
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Array [
                    Object {
                      "color": "#7F91A7",
                      "fontSize": 16,
                      "lineHeight": 19,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                ]
              }
            >
              Select a course
            </Text>
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#c7c7cc",
                  "borderRightWidth": 2,
                  "borderTopWidth": 2,
                  "height": 10,
                  "marginLeft": 7,
                  "transform": Array [
                    Object {
                      "rotate": "45deg",
                    },
                  ],
                  "width": 10,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "borderBottomColor": "#C7CDD1",
              "borderBottomWidth": 0.5,
              "paddingHorizontal": 16,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            placeholder="Subject"
            placeholderTextColor="#7F91A7"
            style={
              Object {
                "fontSize": 16,
                "height": 54,
                "lineHeight": 19,
              }
            }
            value={null}
          />
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="Send individual message to each recipient, Off"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                undefined,
                Object {
                  "borderBottomColor": "#C7CDD1",
                  "borderBottomWidth": 0.5,
                },
              ],
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Send individual message to each recipient
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <RCTSwitch
                  border="bottom"
                  disabled={false}
                  identifier="compose-message.send-all-toggle"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onTintColor="#374A59"
                  onValueChange={[Function]}
                  style={
                    Array [
                      Object {
                        "height": 31,
                        "width": 51,
                      },
                      undefined,
                    ]
                  }
                  testID="compose-message.send-all-toggle"
                  tintColor="#374A59"
                  title="Send individual message to each recipient"
                  value={false}
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "fontSize": 16,
                "lineHeight": 19,
                "paddingBottom": 12.8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12.8,
              },
              Object {
                "borderBottomWidth": 0,
                "paddingBottom": 40,
                "paddingTop": 10,
              },
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            defaultHeight={54}
            extraHeight={20}
            multiline={true}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            placeholder="Compose message"
            placeholderTextColor="#7F91A7"
            style={
              Array [
                Object {
                  "fontSize": 16,
                  "height": 54,
                  "lineHeight": 19,
                },
                Object {
                  "height": 54,
                },
              ]
            }
            testID="compose-message.body-text-input"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</Screen>
`;

exports[`Compose renders after picking a course 1`] = `
<Screen
  drawUnderNavBar={true}
  leftBarButtons={
    Array [
      Object {
        "action": [Function],
        "testID": "compose-message.cancel",
        "title": "Cancel",
      },
    ]
  }
  navBarColor="#fff"
  navBarStyle="light"
  rightBarButtons={
    Array [
      Object {
        "action": [Function],
        "disabled": true,
        "style": "done",
        "testID": "compose-message.send",
        "title": "Send",
      },
      Object {
        "accessibilityLabel": "Edit attachments (0)",
        "action": [Function],
        "badge": false,
        "image": Object {
          "testUri": "../../../src/images/attachment-large.png",
        },
        "testID": "compose-message.attach",
      },
    ]
  }
  title="New Message"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0.6)",
                "borderRadius": 12,
              },
              Object {
                "backgroundColor": "rgba(0,0,0,0.8)",
              },
              Object {
                "height": 170,
                "width": 170,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#fff",
                      "fontFamily": ".SFUIDisplay-semibold",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "color": "#fff",
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Sending...
              </Text>
            </View>
          </View>
          <ActivityIndicator
            animating={true}
            color="#fff"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "flex": 1,
                "marginTop": -40,
              }
            }
          />
        </View>
      </View>
    </Modal>
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingBottom": 16,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutoAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      onScroll={[Function]}
      scrollEventThrottle={0}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
                "paddingHorizontal": 16,
              },
            ]
          }
          testID="compose.course-select"
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 54,
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Array [
                    Object {
                      "color": "#7F91A7",
                      "fontSize": 16,
                      "lineHeight": 19,
                    },
                    Object {
                      "color": "#2D3B45",
                    },
                  ],
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                ]
              }
            >
              Learn React Native
            </Text>
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#c7c7cc",
                  "borderRightWidth": 2,
                  "borderTopWidth": 2,
                  "height": 10,
                  "marginLeft": 7,
                  "transform": Array [
                    Object {
                      "rotate": "45deg",
                    },
                  ],
                  "width": 10,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
                "paddingHorizontal": 16,
              },
              Object {
                "alignItems": "flex-start",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "minHeight": 54,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "height": 54,
                "justifyContent": "center",
                "padding": 6,
                "paddingLeft": 0,
              }
            }
            testID="compose.recipients-placeholder"
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#7F91A7",
                    "fontSize": 16,
                    "lineHeight": 19,
                  },
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                ]
              }
            >
              To
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "paddingTop": 6,
              }
            }
          />
          <TouchableOpacity
            accessibilityLabel="Add recipient"
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            onPress={[Function]}
            style={
              Object {
                "height": 54,
                "justifyContent": "center",
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/images/Add.png",
                }
              }
              style={
                Object {
                  "tintColor": "#368BD8",
                }
              }
            />
          </TouchableOpacity>
        </View>
        <View
          style={
            Object {
              "borderBottomColor": "#C7CDD1",
              "borderBottomWidth": 0.5,
              "paddingHorizontal": 16,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            placeholder="Subject"
            placeholderTextColor="#7F91A7"
            style={
              Object {
                "fontSize": 16,
                "height": 54,
                "lineHeight": 19,
              }
            }
            value={null}
          />
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="Send individual message to each recipient, Off"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                undefined,
                Object {
                  "borderBottomColor": "#C7CDD1",
                  "borderBottomWidth": 0.5,
                },
              ],
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Send individual message to each recipient
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <RCTSwitch
                  border="bottom"
                  disabled={false}
                  identifier="compose-message.send-all-toggle"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onTintColor="#374A59"
                  onValueChange={[Function]}
                  style={
                    Array [
                      Object {
                        "height": 31,
                        "width": 51,
                      },
                      undefined,
                    ]
                  }
                  testID="compose-message.send-all-toggle"
                  tintColor="#374A59"
                  title="Send individual message to each recipient"
                  value={false}
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "fontSize": 16,
                "lineHeight": 19,
                "paddingBottom": 12.8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12.8,
              },
              Object {
                "borderBottomWidth": 0,
                "paddingBottom": 40,
                "paddingTop": 10,
              },
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            defaultHeight={54}
            extraHeight={20}
            multiline={true}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            placeholder="Compose message"
            placeholderTextColor="#7F91A7"
            style={
              Array [
                Object {
                  "fontSize": 16,
                  "height": 54,
                  "lineHeight": 19,
                },
                Object {
                  "height": 54,
                },
              ]
            }
            testID="compose-message.body-text-input"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</Screen>
`;

exports[`Compose renders reply 1`] = `
<Screen
  drawUnderNavBar={true}
  leftBarButtons={
    Array [
      Object {
        "action": [Function],
        "testID": "compose-message.cancel",
        "title": "Cancel",
      },
    ]
  }
  navBarColor="#fff"
  navBarStyle="light"
  rightBarButtons={
    Array [
      Object {
        "action": [Function],
        "disabled": true,
        "style": "done",
        "testID": "compose-message.send",
        "title": "Send",
      },
      Object {
        "accessibilityLabel": "Edit attachments (0)",
        "action": [Function],
        "badge": false,
        "image": Object {
          "testUri": "../../../src/images/attachment-large.png",
        },
        "testID": "compose-message.attach",
      },
    ]
  }
  title="New Message"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0.6)",
                "borderRadius": 12,
              },
              Object {
                "backgroundColor": "rgba(0,0,0,0.8)",
              },
              Object {
                "height": 170,
                "width": 170,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#fff",
                      "fontFamily": ".SFUIDisplay-semibold",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "color": "#fff",
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Sending...
              </Text>
            </View>
          </View>
          <ActivityIndicator
            animating={true}
            color="#fff"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "flex": 1,
                "marginTop": -40,
              }
            }
          />
        </View>
      </View>
    </Modal>
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingBottom": 16,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutoAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      onScroll={[Function]}
      scrollEventThrottle={0}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
                "paddingHorizontal": 16,
              },
            ]
          }
          testID="compose.course-select"
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 54,
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Array [
                    Object {
                      "color": "#7F91A7",
                      "fontSize": 16,
                      "lineHeight": 19,
                    },
                    Object {
                      "color": "#2D3B45",
                    },
                  ],
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                ]
              }
            >
              Course 1
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
                "paddingHorizontal": 16,
              },
              Object {
                "alignItems": "flex-start",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "minHeight": 54,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "height": 54,
                "justifyContent": "center",
                "padding": 6,
                "paddingLeft": 0,
              }
            }
            testID="compose.recipients-placeholder"
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#7F91A7",
                    "fontSize": 16,
                    "lineHeight": 19,
                  },
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                ]
              }
            >
              To
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "paddingTop": 6,
              }
            }
          />
          <TouchableOpacity
            accessibilityLabel="Add recipient"
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            onPress={[Function]}
            style={
              Object {
                "height": 54,
                "justifyContent": "center",
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/images/Add.png",
                }
              }
              style={
                Object {
                  "tintColor": "#368BD8",
                }
              }
            />
          </TouchableOpacity>
        </View>
        <View
          style={
            Object {
              "borderBottomColor": "#C7CDD1",
              "borderBottomWidth": 0.5,
              "paddingHorizontal": 16,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={false}
            onChangeText={[Function]}
            placeholder="Subject"
            placeholderTextColor="#7F91A7"
            style={
              Object {
                "fontSize": 16,
                "height": 54,
                "lineHeight": 19,
              }
            }
            value="(no subject)"
          />
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="Send individual message to each recipient, Off"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                undefined,
                Object {
                  "borderBottomColor": "#C7CDD1",
                  "borderBottomWidth": 0.5,
                },
              ],
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Send individual message to each recipient
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <RCTSwitch
                  border="bottom"
                  disabled={false}
                  identifier="compose-message.send-all-toggle"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onTintColor="#374A59"
                  onValueChange={[Function]}
                  style={
                    Array [
                      Object {
                        "height": 31,
                        "width": 51,
                      },
                      undefined,
                    ]
                  }
                  testID="compose-message.send-all-toggle"
                  tintColor="#374A59"
                  title="Send individual message to each recipient"
                  value={false}
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "fontSize": 16,
                "lineHeight": 19,
                "paddingBottom": 12.8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12.8,
              },
              Object {
                "borderBottomWidth": 0,
                "paddingBottom": 40,
                "paddingTop": 10,
              },
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            defaultHeight={54}
            extraHeight={20}
            multiline={true}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            placeholder="Compose message"
            placeholderTextColor="#7F91A7"
            style={
              Array [
                Object {
                  "fontSize": 16,
                  "height": 54,
                  "lineHeight": 19,
                },
                Object {
                  "height": 54,
                },
              ]
            }
            testID="compose-message.body-text-input"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</Screen>
`;

exports[`Compose renders with passed in recipients 1`] = `
<Screen
  drawUnderNavBar={true}
  leftBarButtons={
    Array [
      Object {
        "action": [Function],
        "testID": "compose-message.cancel",
        "title": "Cancel",
      },
    ]
  }
  navBarColor="#fff"
  navBarStyle="light"
  rightBarButtons={
    Array [
      Object {
        "action": [Function],
        "disabled": true,
        "style": "done",
        "testID": "compose-message.send",
        "title": "Send",
      },
      Object {
        "accessibilityLabel": "Edit attachments (0)",
        "action": [Function],
        "badge": false,
        "image": Object {
          "testUri": "../../../src/images/attachment-large.png",
        },
        "testID": "compose-message.attach",
      },
    ]
  }
  title="New Message"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0.6)",
                "borderRadius": 12,
              },
              Object {
                "backgroundColor": "rgba(0,0,0,0.8)",
              },
              Object {
                "height": 170,
                "width": 170,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#fff",
                      "fontFamily": ".SFUIDisplay-semibold",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "color": "#fff",
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Sending...
              </Text>
            </View>
          </View>
          <ActivityIndicator
            animating={true}
            color="#fff"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "flex": 1,
                "marginTop": -40,
              }
            }
          />
        </View>
      </View>
    </Modal>
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingBottom": 16,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutoAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      onScroll={[Function]}
      scrollEventThrottle={0}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
                "paddingHorizontal": 16,
              },
            ]
          }
          testID="compose.course-select"
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 54,
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Array [
                    Object {
                      "color": "#7F91A7",
                      "fontSize": 16,
                      "lineHeight": 19,
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": ".SFUIDisplay",
                  },
                ]
              }
            >
              Select a course
            </Text>
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#c7c7cc",
                  "borderRightWidth": 2,
                  "borderTopWidth": 2,
                  "height": 10,
                  "marginLeft": 7,
                  "transform": Array [
                    Object {
                      "rotate": "45deg",
                    },
                  ],
                  "width": 10,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "borderBottomColor": "#C7CDD1",
              "borderBottomWidth": 0.5,
              "paddingHorizontal": 16,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            placeholder="Subject"
            placeholderTextColor="#7F91A7"
            style={
              Object {
                "fontSize": 16,
                "height": 54,
                "lineHeight": 19,
              }
            }
            value={null}
          />
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel="Send individual message to each recipient, Off"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                undefined,
                Object {
                  "borderBottomColor": "#C7CDD1",
                  "borderBottomWidth": 0.5,
                },
              ],
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Send individual message to each recipient
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <RCTSwitch
                  border="bottom"
                  disabled={false}
                  identifier="compose-message.send-all-toggle"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  onTintColor="#374A59"
                  onValueChange={[Function]}
                  style={
                    Array [
                      Object {
                        "height": 31,
                        "width": 51,
                      },
                      undefined,
                    ]
                  }
                  testID="compose-message.send-all-toggle"
                  tintColor="#374A59"
                  title="Send individual message to each recipient"
                  value={false}
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "fontSize": 16,
                "lineHeight": 19,
                "paddingBottom": 12.8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12.8,
              },
              Object {
                "borderBottomWidth": 0,
                "paddingBottom": 40,
                "paddingTop": 10,
              },
            ]
          }
        >
          <TextInput
            allowFontScaling={true}
            defaultHeight={54}
            extraHeight={20}
            multiline={true}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            placeholder="Compose message"
            placeholderTextColor="#7F91A7"
            style={
              Array [
                Object {
                  "fontSize": 16,
                  "height": 54,
                  "lineHeight": 19,
                },
                Object {
                  "height": 54,
                },
              ]
            }
            testID="compose-message.body-text-input"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</Screen>
`;
