// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SpeedGrader renders 1`] = `
<RCTScrollView
  contentOffset={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  horizontal={true}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  pagingEnabled={true}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  style={
    Object {
      "marginLeft": -10,
      "marginRight": -10,
    }
  }
>
  <View />
</RCTScrollView>
`;

exports[`SpeedGrader renders submissions if there are some 1`] = `
<RCTScrollView
  contentOffset={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  horizontal={true}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  pagingEnabled={true}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  style={
    Object {
      "marginLeft": -10,
      "marginRight": -10,
    }
  }
>
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
              "paddingLeft": 10,
              "paddingRight": 10,
            },
            Object {
              "height": 1334,
              "width": 750,
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <Header
            closeModal={[Function]}
            submissionID={undefined}
            submissionProps={
              Object {
                "avatarURL": "http://www.fillmurray.com/100/100",
                "grade": "B-",
                "name": "Donald Trump",
                "status": "submitted",
                "userID": "55",
              }
            }
          />
          <Interactable.View
            animatedValueY={1275}
            initialPosition={
              Object {
                "y": 1275,
              }
            }
            onLayout={undefined}
            onSnap={[Function]}
            snapPoints={
              Array [
                Object {
                  "y": 207.8,
                },
                Object {
                  "y": 741.4,
                },
                Object {
                  "y": 1275,
                },
              ]
            }
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "maxWidth": 700,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "left": 25,
                  "right": 25,
                },
              ]
            }
            verticalOnly={true}
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 12,
                    "bottom": -20,
                    "left": 0,
                    "margin": 0,
                    "padding": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "backgroundColor": "#FFFFFF55",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 3,
                  },
                ]
              }
            />
            <BlurView
              blurAmount={10}
              blurType="xlight"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "borderRadius": 12,
                    "bottom": -20,
                    "left": 0,
                    "margin": 0,
                    "padding": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "height": 1334,
                    "paddingBottom": 1275,
                    "paddingTop": 16,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "left": 0,
                      "marginVertical": 6,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "darkgray",
                        "borderRadius": 5,
                        "height": 4,
                        "marginBottom": 8,
                        "marginTop": 4,
                        "width": 40,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    Object {
                      "borderBottomColor": "darkgray",
                      "borderBottomWidth": 0.5,
                      "paddingBottom": 8,
                      "paddingHorizontal": 16,
                      "paddingTop": 8,
                    }
                  }
                >
                  <RCTSegmentedControl
                    enabled={true}
                    onChange={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 28,
                        },
                        undefined,
                      ]
                    }
                    testID="speedgrader.segment-control"
                    values={
                      Array [
                        "Grades",
                        "Comments",
                        "Files",
                      ]
                    }
                  />
                </View>
                <RCTScrollView
                  style={
                    Object {
                      "paddingHorizontal": 16,
                    }
                  }
                >
                  <View>
                    <GradePicker
                      assignmentID="1"
                      closeModal={[Function]}
                      courseID="1"
                      submissionID={undefined}
                      submissionProps={
                        Object {
                          "avatarURL": "http://www.fillmurray.com/100/100",
                          "grade": "B-",
                          "name": "Donald Trump",
                          "status": "submitted",
                          "userID": "55",
                        }
                      }
                      userID="55"
                    />
                  </View>
                </RCTScrollView>
              </View>
            </BlurView>
          </Interactable.View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`SpeedGrader shows the loading spinner when pending and not refreshing 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="small"
  />
</View>
`;

exports[`SpeedGrader shows the loading spinner when there are no submissions 1`] = `
<RCTScrollView
  contentOffset={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  horizontal={true}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  pagingEnabled={true}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  style={
    Object {
      "marginLeft": -10,
      "marginRight": -10,
    }
  }
>
  <View />
</RCTScrollView>
`;
