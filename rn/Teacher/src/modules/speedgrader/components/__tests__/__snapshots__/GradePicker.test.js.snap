// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GradePicker disables the button and has correct text for not graded assignment type 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "lightgray",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 9,
      }
    }
  >
    <Text
      accessibilityTraits="header"
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontFamily": ".SFUIDisplay",
          },
          Object {
            "color": "#2D3B45",
            "fontFamily": ".SFUIDisplay-semibold",
            "fontSize": 20,
          },
          undefined,
        ]
      }
    >
      Grade
    </Text>
    <TouchableOpacity
      accessibilityComponentType="button"
      accessibilityTraits="button"
      activeOpacity={1}
      style={undefined}
      testID="grade-picker.button"
    >
      <Text
        accessibilityTraits="header"
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontFamily": ".SFUIDisplay",
            },
            Object {
              "color": "#2D3B45",
              "fontFamily": ".SFUIDisplay-semibold",
              "fontSize": 20,
            },
            undefined,
          ]
        }
      >
        Not Graded
      </Text>
    </TouchableOpacity>
  </View>
</View>
`;

exports[`GradePicker renders points based grades 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "lightgray",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 9,
      }
    }
  >
    <Text
      accessibilityTraits="header"
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontFamily": ".SFUIDisplay",
          },
          Object {
            "color": "#2D3B45",
            "fontFamily": ".SFUIDisplay-semibold",
            "fontSize": 20,
          },
          undefined,
        ]
      }
    >
      Grade
    </Text>
    <TouchableOpacity
      accessibilityComponentType="button"
      accessibilityTraits="button"
      activeOpacity={0.2}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      style={undefined}
      testID="grade-picker.button"
    >
      <Text
        accessibilityTraits="header"
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontFamily": ".SFUIDisplay",
            },
            Object {
              "color": "#2D3B45",
              "fontFamily": ".SFUIDisplay-semibold",
              "fontSize": 20,
            },
            undefined,
          ]
        }
      >
        
        5/10
      </Text>
    </TouchableOpacity>
  </View>
</View>
`;

exports[`GradePicker renders the activity indicator when pending 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "lightgray",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 9,
      }
    }
  >
    <Text
      accessibilityTraits="header"
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontFamily": ".SFUIDisplay",
          },
          Object {
            "color": "#2D3B45",
            "fontFamily": ".SFUIDisplay-semibold",
            "fontSize": 20,
          },
          undefined,
        ]
      }
    >
      Grade
    </Text>
    <TouchableOpacity
      accessibilityComponentType="button"
      accessibilityTraits="button"
      activeOpacity={1}
      style={undefined}
      testID="grade-picker.button"
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </TouchableOpacity>
  </View>
</View>
`;

exports[`GradePicker renders the picker for pass fail assignments 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "lightgray",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 9,
      }
    }
  >
    <Text
      accessibilityTraits="header"
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontFamily": ".SFUIDisplay",
          },
          Object {
            "color": "#2D3B45",
            "fontFamily": ".SFUIDisplay-semibold",
            "fontSize": 20,
          },
          undefined,
        ]
      }
    >
      Grade
    </Text>
    <TouchableOpacity
      accessibilityComponentType="button"
      accessibilityTraits="button"
      activeOpacity={0.2}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      style={undefined}
      testID="grade-picker.button"
    >
      <Image
        source={1}
        style={
          Object {
            "tintColor": "#368BD8",
          }
        }
      />
    </TouchableOpacity>
  </View>
  <Animated.View
    style={
      Object {
        "height": mockConstructor {},
        "overflow": "hidden",
      }
    }
  >
    <PickerIOS
      onValueChange={[Function]}
      selectedValue=""
    >
      <Item
        label="---"
        value=""
      />
      <Item
        label="Complete"
        value="complete"
      />
      <Item
        label="Incomplete"
        value="incomplete"
      />
      <Item
        label="Excuse Student"
        value="ex"
      />
    </PickerIOS>
  </Animated.View>
</View>
`;

exports[`GradePicker renders with excused 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "lightgray",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 9,
      }
    }
  >
    <Text
      accessibilityTraits="header"
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontFamily": ".SFUIDisplay",
          },
          Object {
            "color": "#2D3B45",
            "fontFamily": ".SFUIDisplay-semibold",
            "fontSize": 20,
          },
          undefined,
        ]
      }
    >
      Grade
    </Text>
    <TouchableOpacity
      accessibilityComponentType="button"
      accessibilityTraits="button"
      activeOpacity={0.2}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      style={undefined}
      testID="grade-picker.button"
    >
      <Text
        accessibilityTraits="header"
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontFamily": ".SFUIDisplay",
            },
            Object {
              "color": "#2D3B45",
              "fontFamily": ".SFUIDisplay-semibold",
              "fontSize": 20,
            },
            undefined,
          ]
        }
      >
        Excused
      </Text>
    </TouchableOpacity>
  </View>
</View>
`;

exports[`GradePicker renders with no grade 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "lightgray",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 9,
      }
    }
  >
    <Text
      accessibilityTraits="header"
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontFamily": ".SFUIDisplay",
          },
          Object {
            "color": "#2D3B45",
            "fontFamily": ".SFUIDisplay-semibold",
            "fontSize": 20,
          },
          undefined,
        ]
      }
    >
      Grade
    </Text>
    <TouchableOpacity
      accessibilityComponentType="button"
      accessibilityTraits="button"
      activeOpacity={0.2}
      onLongPress={undefined}
      onPress={[Function]}
      onPressIn={undefined}
      onPressOut={undefined}
      style={undefined}
      testID="grade-picker.button"
    >
      <Image
        source={1}
        style={
          Object {
            "tintColor": "#368BD8",
          }
        }
      />
    </TouchableOpacity>
  </View>
</View>
`;
