// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render row with switch 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      Array [
        Object {
          "height": 54,
        },
        undefined,
        undefined,
      ],
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "flex": 1,
        "flexDirection": "row",
        "paddingBottom": 8,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 8,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontFamily": ".SFUIDisplay",
            },
            Object {
              "color": "#2D3B45",
              "fontSize": 16,
            },
            Object {
              "fontWeight": "600",
            },
            Object {
              "fontFamily": ".SFUIDisplay-semibold",
            },
          ]
        }
      >
        Row with a switch in it!
      </Text>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "flex-end",
        }
      }
    >
      <RCTSwitch
        disabled={false}
        identifier="test"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#ff0ee8"
        onValueChange={[Function]}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            undefined,
          ]
        }
        testID="test"
        tintColor="#ff0ee8"
        title="Row with a switch in it!"
        value={false}
      />
    </View>
  </View>
</View>
`;
