// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VideoRecorder renders finished 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "flexDirection": "row",
        "left": 0,
        "paddingHorizontal": 16,
        "paddingVertical": 12,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 2,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "width": 60,
        }
      }
    >
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        style={
          Object {
            "marginRight": 12,
          }
        }
        testID="video-recorder.cancel.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        testID="video-recorder.reset.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "flex": 1,
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      00:00
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "width": 60,
          },
          Object {
            "justifyContent": "flex-end",
          },
        ]
      }
    >
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        testID="video-recorder.send.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.6)",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="small"
    />
  </View>
  <Video
    source={
      Object {
        "uri": "file:///comment.mov",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 0.5,
      }
    }
  />
</View>
`;

exports[`VideoRecorder renders loading 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "flexDirection": "row",
        "left": 0,
        "paddingHorizontal": 16,
        "paddingVertical": 12,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 2,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "width": 60,
        }
      }
    >
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        style={
          Object {
            "marginRight": 12,
          }
        }
        testID="video-recorder.cancel.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "flex": 1,
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      00:00
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "width": 60,
          },
          Object {
            "justifyContent": "flex-end",
          },
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.6)",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="small"
    />
  </View>
</View>
`;

exports[`VideoRecorder renders ready 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "flexDirection": "row",
        "left": 0,
        "paddingHorizontal": 16,
        "paddingVertical": 12,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 2,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "width": 60,
        }
      }
    >
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        style={
          Object {
            "marginRight": 12,
          }
        }
        testID="video-recorder.cancel.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "flex": 1,
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      00:00
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "width": 60,
          },
          Object {
            "justifyContent": "flex-end",
          },
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1,
      }
    }
  >
    <TouchableHighlight
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "white",
            "borderRadius": 40,
            "borderWidth": 4,
            "height": 80,
            "justifyContent": "center",
            "width": 80,
          },
          Object {
            "borderColor": "rgba(255,255,255,1)",
          },
        ]
      }
      testID="video-recorder.start-recording.btn"
      underlayColor="transparent"
    >
      <View
        style={
          Object {
            "backgroundColor": "rgba(235,15,33,1)",
            "borderRadius": 32,
            "height": 64,
            "width": 64,
          }
        }
      />
    </TouchableHighlight>
  </View>
  <Camera
    aspect={undefined}
    captureAudio={true}
    captureMode="video"
    captureQuality="medium"
    captureTarget="disk"
    style={
      Object {
        "flex": 1,
        "zIndex": 0,
      }
    }
    type="front"
  />
</View>
`;

exports[`VideoRecorder renders recording 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "flexDirection": "row",
        "left": 0,
        "paddingHorizontal": 16,
        "paddingVertical": 12,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 2,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "width": 60,
        }
      }
    >
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        style={
          Object {
            "marginRight": 12,
          }
        }
        testID="video-recorder.cancel.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "flex": 1,
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      00:01
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "width": 60,
          },
          Object {
            "justifyContent": "flex-end",
          },
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1,
      }
    }
  >
    <TouchableHighlight
      onPress={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "white",
            "borderRadius": 40,
            "borderWidth": 4,
            "height": 80,
            "justifyContent": "center",
            "width": 80,
          },
          Object {
            "borderColor": "rgba(255,255,255,0.2)",
          },
        ]
      }
      testID="video-recorder.start-recording.btn"
      underlayColor="transparent"
    >
      <View
        style={
          Object {
            "backgroundColor": "rgba(235,15,33,0.2)",
            "height": 32,
            "width": 32,
          }
        }
      />
    </TouchableHighlight>
  </View>
  <Camera
    aspect={undefined}
    captureAudio={true}
    captureMode="video"
    captureQuality="medium"
    captureTarget="disk"
    style={
      Object {
        "flex": 1,
        "zIndex": 0,
      }
    }
    type="front"
  />
</View>
`;

exports[`VideoRecorder renders reset 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.2)",
        "flexDirection": "row",
        "left": 0,
        "paddingHorizontal": 16,
        "paddingVertical": 12,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 2,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "width": 60,
        }
      }
    >
      <TouchableHighlight
        hitSlop={
          Object {
            "bottom": 4,
            "left": 4,
            "right": 4,
            "top": 4,
          }
        }
        onPress={[Function]}
        style={
          Object {
            "marginRight": 12,
          }
        }
        testID="video-recorder.cancel.btn"
        underlayColor="transparent"
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "tintColor": "white",
              "width": 24,
            }
          }
        />
      </TouchableHighlight>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "flex": 1,
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      00:00
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "width": 60,
          },
          Object {
            "justifyContent": "flex-end",
          },
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.6)",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="small"
    />
  </View>
</View>
`;
