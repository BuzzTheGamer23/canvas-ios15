// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        "a",
        "b",
      ]
    }
    dataSource={
      ListViewDataSource {
        "items": 1,
      }
    }
    enableEmptySections={true}
    itemsPerRow={2}
    onEndReached={[Function]}
    onEndReachedThreshold={1334}
    onLayout={[Function]}
    onRefresh={[Function]}
    placeholderStyle={Object {}}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderFooter={[Function]}
    renderHeader={undefined}
    renderItem={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    renderSectionHeader={undefined}
    style={
      Object {
        "flex": 1,
        "overflow": "visible",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          a
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          b
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly with placeHolder 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        "a",
      ]
    }
    dataSource={
      ListViewDataSource {
        "items": 1,
      }
    }
    enableEmptySections={true}
    itemsPerRow={2}
    onEndReached={[Function]}
    onEndReachedThreshold={1334}
    onLayout={[Function]}
    onRefresh={[Function]}
    placeholderStyle={Object {}}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderFooter={[Function]}
    renderHeader={undefined}
    renderItem={[Function]}
    renderPlaceholder={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    renderSectionHeader={[Function]}
    style={
      Object {
        "flex": 1,
        "overflow": "visible",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          a
        </Text>
        <View />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly with sections 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        Array [
          "a",
          "b",
          "c",
        ],
        Array [
          "x",
          "y",
        ],
      ]
    }
    dataSource={
      ListViewDataSource {
        "items": 3,
      }
    }
    enableEmptySections={true}
    itemsPerRow={2}
    onEndReached={[Function]}
    onEndReachedThreshold={1334}
    onLayout={[Function]}
    onRefresh={[Function]}
    placeholderStyle={Object {}}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderFooter={[Function]}
    renderHeader={undefined}
    renderItem={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    renderSectionHeader={undefined}
    sections={true}
    style={
      Object {
        "flex": 1,
        "overflow": "visible",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          a
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          b
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          c
        </Text>
        <View
          style={Object {}}
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          x
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          y
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly without sections 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        Array [
          "a",
          "b",
          "c",
        ],
        Array [
          "x",
          "y",
        ],
      ]
    }
    dataSource={
      ListViewDataSource {
        "items": 1,
      }
    }
    enableEmptySections={true}
    itemsPerRow={2}
    onEndReached={[Function]}
    onEndReachedThreshold={1334}
    onLayout={[Function]}
    onRefresh={[Function]}
    placeholderStyle={Object {}}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderFooter={[Function]}
    renderHeader={undefined}
    renderItem={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    renderSectionHeader={undefined}
    sections={false}
    style={
      Object {
        "flex": 1,
        "overflow": "visible",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          a
          b
          c
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          x
          y
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`updates list when data prop changes 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        "a",
        "b",
      ]
    }
    dataSource={
      ListViewDataSource {
        "items": 1,
      }
    }
    enableEmptySections={true}
    itemsPerRow={2}
    onEndReached={[Function]}
    onEndReachedThreshold={1334}
    onLayout={[Function]}
    onRefresh={[Function]}
    placeholderStyle={Object {}}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderFooter={[Function]}
    renderHeader={undefined}
    renderItem={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    renderSectionHeader={undefined}
    style={
      Object {
        "flex": 1,
        "overflow": "visible",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          data changed
        </Text>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`updates list when data prop changes with sections 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    data={
      Array [
        Array [],
      ]
    }
    dataSource={
      ListViewDataSource {
        "items": 1,
      }
    }
    enableEmptySections={true}
    itemsPerRow={2}
    onEndReached={[Function]}
    onEndReachedThreshold={1334}
    onLayout={[Function]}
    onRefresh={[Function]}
    placeholderStyle={Object {}}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    renderFooter={[Function]}
    renderHeader={undefined}
    renderItem={[Function]}
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    renderSectionHeader={undefined}
    sections={true}
    style={
      Object {
        "flex": 1,
        "overflow": "visible",
      }
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontFamily": ".SFUIDisplay",
              },
              Object {
                "color": "#2D3B45",
                "fontSize": 16,
              },
              undefined,
              Object {
                "fontFamily": ".SFUIDisplay",
              },
            ]
          }
        >
          data changed with sections
        </Text>
        <View
          style={Object {}}
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
